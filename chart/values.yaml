# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# Number of OPA replicas to deploy. OPA maintains an eventually consistent
# cache of policies and data. If you want high availability you can deploy two
# or more replicas.
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/krateoplatformops/opa
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  tag: 1.4.2-static

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # Annotations for the ServiceAccount
  annotations: {}
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  enabled: false
  runAsNonRoot: true
  runAsUser: 1

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # Annotations to add to the service
  annotations: {}
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8181

  ## Additional ports to the opa services. Useful to expose extra container ports.
  extraPorts: []
  # - port: 11811
  #   protocol: TCP
  #   name: http
  #   targetPort: http

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# Should OPA use TLS or not.
useHttps: true

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: opa
    scheme: HTTPS # if useHttps is set to true, otherwise http
  initialDelaySeconds: 5
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /health
    port: opa
    scheme: HTTPS # if useHttps is set to true, otherwise http
  initialDelaySeconds: 5
  periodSeconds: 10  

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Controls a PodDisruptionBudget for the OPA pod. Suggested use if having opa
# always running for admission control is important
podDisruptionBudget:
  enabled: false
  minAvailable: 1
# maxUnavailable: 1

# To control how the OPA is scheduled on the cluster, set the affinity,
# tolerations and nodeSelector values below. For example, to deploy OPA onto
# the master nodes, 1 replica per node:
#
# affinity:
#   podAntiAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#     - labelSelector:
#         matchExpressions:
#         - key: "app"
#           operator: In
#           values:
#           - opa
#       topologyKey: "kubernetes.io/hostname"
# tolerations:
# - key: "node-role.kubernetes.io/master"
#   effect: NoSchedule
#   operator: Exists
# nodeSelector:
#   kubernetes.io/role: "master"
affinity: {}
tolerations: []
nodeSelector: {}


# Additional volumes on the output Deployment definition.
volumes:
- name: policies
  configMap: 
    name: finops-moving-window-policy

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: policies
  mountPath: /policies

# Extra environment variables to be loaded into the OPA container
env: {}

# Default values for opa.
# -----------------------
#
# OPA configuration file. See https://www.openpolicyagent.org/docs/configuration.html for more details.
opa:
  config:
    default_decision: /router/result

  # Bootstrap policies to load upon startup
  # Define policies in the form of:
  # <policyName> : |-
  #   <regoBody>
  # For example, to mask the entire input body in the decision logs:
  # bootstrapPolicies:
  #   log: |-
  #     package system.log
  #     mask["/input"]
  bootstrapPolicies: {}

  # The helm Chart will automatically generate a CA and server certificate for
  # the OPA. If you want to supply your own certificates, set the field below to
  # false and add the PEM encoded CA certificate and server key pair below.
  #
  # WARNING: The common name name in the server certificate MUST match the
  # hostname of the service that exposes the OPA to the apiserver. For example.
  # if the service name is created in the "default" nanamespace with name "opa"
  # the common name MUST be set to "opa.default.svc".
  #
  # If the common name is not set correctly, the apiserver will refuse to
  # communicate with the OPA.
  generateCerts: true
  cert: ""
  key: ""

  authz:
    # Disable if you don't want authorization.
    # Mostly useful for debugging.
    enabled: false
    # Used for setting the mgmt token used for authz instead of auto generated default
    # mgmtToken:
    #    secretName: name of the secret
    #    secretKey: (optional) key from the secret - default value is: "mgmtToken"

  extraArgs:
  - "--bundle"
  - "/policies"

mgmt:
  enabled: true
  image:
    repository: ghcr.io/krateoplatformops/kube-mgmt
    tag: "" # appVersion is used by default, set to desired value to override
    pullPolicy: IfNotPresent
  extraArgs: []
  env: []
  resources: {}

  # if empty - the current namespaces is watched
  # if `*` - all namespaces are watched
  namespaces: []

  # kube-mgmt container will wait until OPA container comes to running state.
  # Configure values for the startup probe, where kube-mgmt queries for the health
  # of OPA container before it starts.
  startupProbe:
    failureThreshold: 5
    httpGet:
      path: /health
      port: 8181 # Port on which OPA is configured
      scheme: HTTPS
    initialDelaySeconds: 20
    successThreshold: 1
    timeoutSeconds: 10

  data:
    enabled: true
  policies:
    enabled: true
  # NOTE IF you use these, remember to update the RBAC rules to allow
  #      permissions to replicate these things
  replicate:
    cluster: []
#     - [group/]version/resource
    namespace: []
#     - [group/]version/resource
    path: kubernetes

    ignoreNs: []

# Log level for OPA ('debug', 'info', 'error') (app default=info)
logLevel: debug

# Log format for OPA ('text', 'json') (app default=text)
logFormat: json


rbac:
  # should ClusterRole for kube-mgmt be created
  create: true
  # extra rules to be added to a ClusterRole
  extraRules: []
    # - apiGroups: [""]
    #   resources: ["configmaps"]
    #   verbs: ["*"]

# Set a priorityClass using priorityClassName
# priorityClassName:


deploymentStrategy: {}
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0
  # type: RollingUpdate

extraContainers: []
## Additional containers to be added to the opa pod.
# - name: example-app
#   image: example/example-app:latest
#   args:
#     - "run"
#     - "--port=11811"
#     - "--config=/etc/example-app-conf/config.yaml"
#     - "--opa-endpoint=https://localhost:443"
#   ports:
#     - name: http
#       containerPort: 11811
#       protocol: TCP
#   volumeMounts:
#     - name: example-app-auth-config
#       mountPath: /etc/example-app-conf

